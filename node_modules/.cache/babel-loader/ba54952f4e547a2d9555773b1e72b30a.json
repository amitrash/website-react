{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Amit\\\\Desktop\\\\website-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Field from'../Common/Field';import{withFormik}from'formik';import*as Yup from'yup';var fields={sections:[[{name:'name',elementName:'input',type:'text',placeholder:\"Your name*\"},{name:'email',elementName:'input',type:'email',placeholder:\"Your email*\"},{name:'phone',elementName:'input',type:'text',placeholder:\"Your phone*\"}],[{name:'message',elementName:'textarea',type:'text',placeholder:\"Type your message\"}]]};var Contact=/*#__PURE__*/function(_Component){_inherits(Contact,_Component);function Contact(){_classCallCheck(this,Contact);return _possibleConstructorReturn(this,_getPrototypeOf(Contact).apply(this,arguments));}_createClass(Contact,[{key:\"render\",/*constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n    \r\n    submitForm = (event) =>{\r\n        alert(\"Form submitted!\")\r\n    }*/ ////in form ----> id=\"contactForm\"\nvalue:function render(){var _this=this;return React.createElement(\"section\",{className:\"page-section\",id:\"contact\"},React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-12 text-center\"},React.createElement(\"h2\",{className:\"section-heading text-uppercase\"},\"Contact Us\"),React.createElement(\"h3\",{className:\"section-subheading text-muted\"},\"Lorem ipsum dolor sit amet consectetur.\"))),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-lg-12\"},React.createElement(\"form\",{onSubmit:this.props.handleSubmit,name:\"sentMessage\",noValidate:\"novalidate\"},React.createElement(\"div\",{className:\"row\"},fields.sections.map(function(section,sectionIndex){console.log(\"Section\",sectionIndex,\"with\",section);return React.createElement(\"div\",{className:\"col-md-6\",key:sectionIndex},section.map(function(field,i){return React.createElement(Field,Object.assign({},field,{key:i,value:_this.props.values[field.name],name:field.name,onChange:_this.props.handleChange,onBlur:_this.props.handleBlur,touched:_this.props.touched[field.name],errors:_this.props.errors[field.name]}));}));}),React.createElement(\"div\",{className:\"clearfix\"}),React.createElement(\"div\",{className:\"col-lg-12 text-center\"},React.createElement(\"div\",{id:\"success\"}),React.createElement(\"button\",{id:\"sendMessageButton\",className:\"btn btn-primary btn-xl text-uppercase\",type:\"submit\"},\"Send Message\"))))))));}}]);return Contact;}(Component);var phoneRegExp=/^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;var nameRegExp=/^[aA-zZ\\s]+$/;export default withFormik({mapPropsToValues:function mapPropsToValues(){return{name:'',email:'',phone:'',message:''};},validationSchema:Yup.object().shape({name:Yup.string().matches(nameRegExp,\"Only alphabets are allowed for this field \").min(3,'Come on bro, your name is longer then that.').required('You must give us your name.'),email:Yup.string().email('You need to give a valid email.').required('We need your email.'),phone:Yup.string().matches(phoneRegExp,'Please provide valid phone number.').required('Phone is required.'),message:Yup.string().min(200,'You need to provide us more detailed information.(Minimum 200 letters)').required('Message is required.')}),/* validate: values => {\r\n        const errors ={};\r\n        \r\n        Object.keys(values).map(v => {\r\n            if(!values[v]){\r\n                errors[v] = \"Requierd\";\r\n            }\r\n        })\r\n\r\n        return errors;\r\n    },*/handleSubmit:function handleSubmit(values,_ref){var setSubmitting=_ref.setSubmitting;alert(\"You've submitted the form\",JSON.stringify(values));}})(Contact);","map":{"version":3,"sources":["C:\\Users\\Amit\\Desktop\\website-react\\src\\Components\\Pages\\Contact.js"],"names":["React","Component","Field","withFormik","Yup","fields","sections","name","elementName","type","placeholder","Contact","props","handleSubmit","map","section","sectionIndex","console","log","field","i","values","handleChange","handleBlur","touched","errors","phoneRegExp","nameRegExp","mapPropsToValues","email","phone","message","validationSchema","object","shape","string","matches","min","required","setSubmitting","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Field from '../Common/Field';\r\nimport {withFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst fields =  {\r\n    sections: [\r\n        [\r\n            {name: 'name', elementName: 'input', type: 'text', placeholder:\"Your name*\"},\r\n            {name: 'email', elementName: 'input', type: 'email', placeholder:\"Your email*\"},\r\n            {name: 'phone', elementName: 'input', type: 'text', placeholder:\"Your phone*\"},\r\n        ],\r\n        [\r\n            {name: 'message', elementName: 'textarea', type: 'text', placeholder:\"Type your message\"},\r\n        ]\r\n    ]\r\n}\r\n\r\n\r\nclass Contact extends Component{\r\n    /*constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n    \r\n    submitForm = (event) =>{\r\n        alert(\"Form submitted!\")\r\n    }*/\r\n////in form ----> id=\"contactForm\"\r\n    render(){\r\n        return(\r\n            <section className=\"page-section\" id=\"contact\">\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 text-center\">\r\n                    <h2 className=\"section-heading text-uppercase\">Contact Us</h2>\r\n                    <h3 className=\"section-subheading text-muted\">Lorem ipsum dolor sit amet consectetur.</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                    <form onSubmit={this.props.handleSubmit} name=\"sentMessage\" noValidate=\"novalidate\">\r\n                        <div className=\"row\">\r\n                            {fields.sections.map((section, sectionIndex)=>{\r\n                                console.log(\"Section\", sectionIndex, \"with\", section)\r\n                                return(\r\n                                    <div className=\"col-md-6\" key={sectionIndex}>\r\n                                        {section.map((field, i)=>{\r\n                                            return <Field\r\n                                                        {...field}\r\n                                                        key={i}\r\n                                                        value={this.props.values[field.name]}\r\n                                                        name={field.name}\r\n                                                        onChange={this.props.handleChange}\r\n                                                        onBlur= {this.props.handleBlur}\r\n                                                        touched = {(this.props.touched[field.name])}\r\n                                                        errors = {(this.props.errors[field.name])}\r\n                                                    />\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        <div className=\"clearfix\"></div>\r\n                        <div className=\"col-lg-12 text-center\">\r\n                            <div id=\"success\"></div>\r\n                            <button id=\"sendMessageButton\" className=\"btn btn-primary btn-xl text-uppercase\" type=\"submit\">Send Message</button>\r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst phoneRegExp =/^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\r\nconst nameRegExp =/^[aA-zZ\\s]+$/;\r\nexport default withFormik({\r\n    mapPropsToValues: () => ({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        message: '',\r\n    }),\r\n    validationSchema: Yup.object().shape({\r\n        name:  Yup.string().matches(nameRegExp, \"Only alphabets are allowed for this field \")\r\n        .min(3, 'Come on bro, your name is longer then that.').required('You must give us your name.'),\r\n        email: Yup.string().email('You need to give a valid email.').required('We need your email.'),\r\n        phone: Yup.string().matches(phoneRegExp, 'Please provide valid phone number.').required('Phone is required.'),\r\n        message: Yup.string().min(200, 'You need to provide us more detailed information.(Minimum 200 letters)').required('Message is required.'),\r\n    }),\r\n   /* validate: values => {\r\n        const errors ={};\r\n        \r\n        Object.keys(values).map(v => {\r\n            if(!values[v]){\r\n                errors[v] = \"Requierd\";\r\n            }\r\n        })\r\n\r\n        return errors;\r\n    },*/\r\n    handleSubmit: (values, {setSubmitting}) => {\r\n        alert(\"You've submitted the form\", JSON.stringify(values));\r\n    }\r\n})(Contact);"]},"metadata":{},"sourceType":"module"}